应用场景
1）需要扩展一个类的功能，或给一个类增加附加责任。
2）需要动态地给一个对象增加功能，这些功能可以再动态地撤销。
3）需要增加由一些基本功能的排列组合而产生的非常大量的功能，从而使继承关系变得不现实。

decorator与adapter区别：decorator只改变对象的职责不改变对象的接口，而adapter是一个全新的接口
进行相关的兼容操作。